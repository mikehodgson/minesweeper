var _debug=!0;function Cell(options){this.minesNearby=0,this.mine=options.mine||!1,this.flag=options.flag||!1,this.clear=options.clear||!1,this.row=options.row||0,this.column=options.column||0,this.element=options.element||document.createElement("div"),this.board=options.board||null,this.element.className="cell",this.element.onclick=function(){return _debug&&console.log("cell click"),_self.processClick(),_debug&&console.log(_self),!1},this.element.oncontextmenu=function(){return _self.clear||(_self.clear=!0,_self.flag=!0,_self.element.innerHTML='<span class="text">üè≥Ô∏è</span>'),!1},this.clearNearbyCells=function(){_self.getNearbyCells().filter(cell=>!0!==cell.clear).forEach(cell=>cell.processClick())},this.calculateMinesNearby=function(){return _self.getNearbyCells().filter(cell=>cell.mine).length},this.getNearbyCells=function(){return[_self.board.getCell(_self.row-1,_self.column),_self.board.getCell(_self.row-1,_self.column+1),_self.board.getCell(_self.row,_self.column+1),_self.board.getCell(_self.row+1,_self.column+1),_self.board.getCell(_self.row+1,_self.column),_self.board.getCell(_self.row+1,_self.column-1),_self.board.getCell(_self.row,_self.column-1),_self.board.getCell(_self.row-1,_self.column-1)].filter(cell=>null!=cell)},this.processClick=function(){_self.clear||(_self.mine?(_self.clear=!0,_self.element.className+=" mine",_self.element.innerHTML='<span class="text">üí£</span>'):(_self.clear=!0,_self.minesNearby=_self.calculateMinesNearby(),0===_self.minesNearby?_self.clearNearbyCells():_self.element.className+=" severity"+_self.minesNearby,_self.element.className+=" clear",_self.minesNearby>0&&(_self.element.innerHTML='<span class="text">'+_self.minesNearby+"</span>"))),_debug&&console.log(_self)};let _self=this}function Board(gridWidth,gridHeight){this.gridWidth=gridWidth||24,this.gridHeight=gridHeight||24,this.cells=[],this.init=function(){_debug&&console.log("init start"),_debug&&console.log({gridHeight:gridHeight,gridWidth:gridWidth});for(let r=1;r<=gridHeight;r++)for(let c=1;c<=gridWidth;c++)_self.cells.push(new Cell({row:r,column:c,element:document.createElement("div"),board:_self}));this.setMines(),_debug&&console.log("init end")},this.draw=function(){_debug&&console.log("drawCells start"),_self.cells.map(function(cell){document.getElementById("container").appendChild(cell.element),_debug&&console.log(cell)}),_debug&&console.log("drawCells end")},this.setMines=function(){let counter=0;for(_debug&&console.log("setMines start");counter<20;){let item=_self.cells[Math.floor(Math.random()*_self.cells.length)];!1===item.mine&&(item.mine=!0,counter++,console.log(item))}_debug&&console.log("setMines end")},this.getMines=function(){return _self.cells.filter(function(cell){return!0===cell.mine})},this.getCell=function(row,column){return row>_self.gridHeight||row<1||column>_self.gridWidth||column<1?null:_self.cells.filter(cell=>cell.row===row&&cell.column===column)[0]};let _self=this;this.init()}window.onload=function(){_debug&&console.log("window.onload start");let board=new Board(16,16);board.draw(),_debug&&console.log(board),_debug&&console.log("window.onload end")};